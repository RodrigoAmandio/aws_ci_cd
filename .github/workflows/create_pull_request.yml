# A criação do PR request deve ser um workflow separado do CI
# Isso ocorre para que as alterações locais sejam enviadas definitivamente ao repositório remoto
# Posteriormente, o PR pode ser criado
# A melhor maneira de criar PR via Github Actions é via Github CLI
# É necessário dar acesso ao Github Actions para criar Pull Requests e também leitura e escrita em Settings < Actions < General
name: Create Pull Request

on:
  workflow_run:
    workflows: ["CI Checking"] # Iniciará sempre que o workflow CI Checking terminar
    types:
      - completed

jobs:
  create-pr:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout branch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.workflow_run.head_branch }} # Branch que será a fonte das mudanças
          fetch-depth: 0

      - name: Authenticate GitHub CLI
        run: echo "${{ secrets.GITHUB_TOKEN }}" | gh auth login --with-token
      
      # Checa primeiramente se o PR já existe.
      # Se sim, ele fará o output de uma variável "exists" para ser usado na etapa seguinte
      # Caso o PR esteja aberto, ele fará o skip da criação de um novo, evitando assim uma falha
      - name: Check if PR already exists 

        id: check_pr
        run: |
          if gh pr view --head "${{ github.ref_name }}" --base develop --json url > pr.json 2>/dev/null; then
            echo "PR already exists."
            cat pr.json
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "PR does not exist."
            echo "exists=false" >> $GITHUB_OUTPUT
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create PR (only if not exists)
        if: steps.check_pr.outputs.exists == 'false'
        run: |
          gh pr create \
            --base develop \
            --head "${{ github.ref_name }}" \
            --title "PR automático: ${{ github.ref_name }}" \
            --body "Este PR foi criado automaticamente após os testes passarem."
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}